name: Build App

on:
 push:
 pull_request:

jobs:

  build:
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      id-token: write
      issues: write
      discussions: write
      packages: write
      pages: write
      repository-projects: write
      statuses: write

    runs-on: windows-latest

    steps:
    
    

    - name: checkout
      uses: actions/checkout@v3
     #
    # - uses: suisei-cn/actions-download-file@v1.4.0 
    #   id: downloadfile  # Remember to give an ID if you need the output
    #   name: Download big file
    #   with:
    #     url: "https://www.rubicon.eu/downloads/26bb711a-5771-49fb-b41c-cdb2e48243ee/SFX_512MB.exe"

        
    - name: Upload the artifcat file
      uses: actions/upload-artifact@v4
      with: 
        name: original-artifact
        path: "./files/Multifiles/Folder_Zip_DLL.zip"


    #- name: check if connector is accessible
    #  uses: satak/webrequest-action@master
    #  with:
    #    url: https://qhmfr8dr-44353.euw.devtunnels.ms/healthz
    #    method: GET    
    #- name: check if SignPath is accessible
    #  uses: satak/webrequest-action@master
    #  with:
    #    url: https://fqa.test.signpath.io/api/healthz
    #    method: GET
    - name: Run submit signing request for FQA ORG1
      id: "submit_with_download_org1"
      uses: SignPath/github-actions/actions/submit-signing-request@main
      with:
        #connector-url: 'https://githubactions.connectors.fqa.test.signpath.io:15021/'
        #connector-url: 'https://qhmfr8dr-44353.euw.devtunnels.ms/' 
        connector-url: 'https://webhook.site/f9af1302-0dc3-48f0-95b8-31fd2e43679b/' 
        api-token: 'TEST'
        organization-id: '54145c58-966f-4f56-83c3-4fda3f27da37'
        project-slug: 'GithubTestOrg1'
        # this SigningPolicy has auto-approve enabled, so you don't need to approve the signing request
        signing-policy-slug: 'GithubTestSp'
        artifact-configuration-slug: 'archive'
        artifact-name: original-artifact
        #github-token: '${{ secrets.GHA_TOKEN }}'
        github-token: '${{ secrets.GITHUB_TOKEN }}'
        # signed-artifact-destination-path: 'org1/ActivationManager_Signed.dll'

    - name: Sleep for 30 seconds
      run: Start-Sleep -s 300
      shell: powershell

  # - name: Run submit signing request for FQA ORG2
      # id: "submit_with_download_org2"
      # uses: SignPath/github-actions/actions/submit-signing-request@main
      # with:
        # connector-url: 'https://githubactions.connectors.fqa.test.signpath.io:15021/'
        # api-token: '${{ secrets.SIGN_PATH_API_TOKEN_FQA_ORG2 }}'
        # organization-id: 'c10efa1c-f5bd-47ad-804b-3f289a39db6c'
        # project-slug: 'GithubTestOrg2'
        # # this SigningPolicy has auto-approve enabled, so you don't need to approve the signing request
        # signing-policy-slug: 'GithubTestSp'
        # artifact-configuration-slug: 'initial'
        # artifact-name: original-artifact
        # github-token: '${{ secrets.GHA_TOKEN }}'
        # signed-artifact-destination-path: 'org2/signed-script.ps1'


    # - name: Upload the artifact signed by Org1
    #   uses: actions/upload-artifact@v3
    #   with: 
    #     name: Org1SignedArtifact
    #     path: "org1/Folder_Zip_DLL.zip"

    # # - name: Upload the artifact signed by Org2
    #   # uses: actions/upload-artifact@v3
    #   # with: 
    #     # name: Org2SignedArtifact
    #     # path: "org2/signed-script.ps1"

    # - name: Log submit-signing-request task output for Org1
    #   run: |
    #        echo "signing-request-id [${{steps.submit_with_download_org1.outputs.signing-request-id }}]"
    #        echo "signing-request-web-url [${{steps.submit_with_download_org1.outputs.signing-request-web-url }}]"
    #        echo "signpath-api-url [${{steps.submit_with_download_org1.outputs.signpath-api-url }}]"
    #        echo "signed-artifact-download-url [${{steps.submit_with_download_org1.outputs.signed-artifact-download-url }}]"
           
    # - name: Log submit-signing-request task output for Org2
      # run: |
           # echo "signing-request-id [${{steps.submit_with_download_org2.outputs.signing-request-id }}]"
           # echo "signing-request-web-url [${{steps.submit_with_download_org2.outputs.signing-request-web-url }}]"
           # echo "signpath-api-url [${{steps.submit_with_download_org2.outputs.signpath-api-url }}]"
           # echo "signed-artifact-download-url [${{steps.submit_with_download_org2.outputs.signed-artifact-download-url }}]"
